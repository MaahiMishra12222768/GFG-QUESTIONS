long check(int mid ,int k,vector<int>&arr){
        long sum =0 , n = arr.size();
        for(int i =n/2;i<n;i++)sum+=max(0,mid-arr[i]);
        if(n%2==0)sum+=max(0,mid-arr[n/2-1]);
        if(sum<=k){
            if(n&1)return mid ;
            return max(mid,(mid+arr[n/2])/2);
        }
        return -1 ;
    }
    int maximizeMedian(vector<int>& arr, int k) {
        // code here
        sort(arr.begin(),arr.end());
        long n = arr.size() , l , h = arr[n-1]+k ;
       
        if(n&1)l = arr[n/2];
        else {l = arr[n/2-1];}
        long mid , ans=0 ;
        while(l<=h){
            mid = l + (h-l)/2 ;
            long x =check(mid,k,arr) ;
            if(x!=-1){
                ans = max(ans,x);
                l = mid + 1 ;
            }
            else {
                h = mid - 1 ;
            }
            // cout << x << " " << ans << endl;
        }
        return ans ;
